{
  "openapi": "3.0.0",
  "info": {
    "title": "BCE API",
    "description": "Updates in this version: <br/>\n<ul>\n  <li>Accounts</li>\n  <li>Budgets</li>\n</ul>",
    "contact": {
      "name": "Advanced",
      "url": "https://oneadvanced.com/contact-us",
      "email": "api@oneadvanced.com"
    },
    "version": "1.0.27",
    "x-audience": "external-partner",
    "x-api-id": "129f3010-64c6-41f5-a4ec-cb08a4d4b896"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/AdvancedComputerSoft/BCE-API/1.0.26",
      "description": "SwaggerHub API Auto Mocking"
    },
    {
      "url": "https://virtserver.swaggerhub.com/AdvancedComputerSoft/e-commerce/1.0.26",
      "description": "SwaggerHub API Auto Mocking"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "authentication"
    },
    {
      "name": "product"
    },
    {
      "name": "customer"
    },
    {
      "name": "company"
    },
    {
      "name": "order"
    },
    {
      "name": "budget"
    },
    {
      "name": "account"
    }
  ],
  "paths": {
    "/auth/user": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "get auth token",
        "description": "Login with your BCE credentials.",
        "operationId": "login",
        "requestBody": {
          "$ref": "#/components/requestBodies/auth"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authToken"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/400",
                  "title": "Bad Request",
                  "status": 400,
                  "detail": "The request is invalid.",
                  "issues": [
                    {
                      "fieldName": "fieldName",
                      "erorr": "This is the problem with the field"
                    },
                    {
                      "fieldName": "fieldOther",
                      "error": "This is the problem with the field"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          }
        }
      }
    },
    "/companies": {
      "get": {
        "tags": [
          "company"
        ],
        "summary": "list of companies",
        "description": "List of companies/company name/codes that could be linked to",
        "operationId": "listCompanies",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/allCompanies"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/400",
                  "title": "Bad Request",
                  "status": 400,
                  "detail": "The request is invalid.",
                  "issues": [
                    {
                      "fieldName": "fieldName",
                      "erorr": "This is the problem with the field"
                    },
                    {
                      "fieldName": "fieldOther",
                      "error": "This is the problem with the field"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          }
        }
      }
    },
    "/products/categories": {
      "get": {
        "tags": [
          "product"
        ],
        "summary": "list prod categories",
        "description": "List of Stock/Product categories",
        "operationId": "listProductCategories",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/allStockCategories"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/400",
                  "title": "Bad Request",
                  "status": 400,
                  "detail": "The request is invalid.",
                  "issues": [
                    {
                      "fieldName": "fieldName",
                      "erorr": "This is the problem with the field"
                    },
                    {
                      "fieldName": "fieldOther",
                      "error": "This is the problem with the field"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": [
          "product"
        ],
        "summary": "list catalogue items",
        "description": "List of all catalogue items",
        "operationId": "listProducts",
        "parameters": [
          {
            "name": "product_code",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "2mmSS"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "2mm Stainless"
            }
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "alloy"
            }
          },
          {
            "name": "sell_online",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "enum": [
                true,
                false
              ]
            }
          },
          {
            "name": "sort_col",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "product_code",
                "created_at",
                "updated_at"
              ]
            }
          },
          {
            "name": "sort_dir",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/400",
                  "title": "Bad Request",
                  "status": 400,
                  "detail": "The request is invalid.",
                  "issues": [
                    {
                      "fieldName": "fieldName",
                      "erorr": "This is the problem with the field"
                    },
                    {
                      "fieldName": "fieldOther",
                      "error": "This is the problem with the field"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "product"
        ],
        "summary": "Add a new product",
        "description": "This will add a new product.",
        "operationId": "createProduct",
        "requestBody": {
          "$ref": "#/components/requestBodies/product"
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Location": {
                "description": "Link to view details of created product",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string",
                  "example": "https://virtserver.swaggerhub.com/advanced5/bce/v1/products/2mmSS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/400",
                  "title": "Bad Request",
                  "status": 400,
                  "detail": "The request is invalid.",
                  "issues": [
                    {
                      "fieldName": "fieldName",
                      "erorr": "This is the problem with the field"
                    },
                    {
                      "fieldName": "fieldOther",
                      "error": "This is the problem with the field"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          }
        }
      }
    },
    "/products/{product_code}": {
      "get": {
        "tags": [
          "product"
        ],
        "summary": "Find a single product",
        "description": "Get details of a single product.",
        "operationId": "viewProductDetails",
        "parameters": [
          {
            "name": "product_code",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "2mmSS"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/product"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/400",
                  "title": "Bad Request",
                  "status": 400,
                  "detail": "The request is invalid.",
                  "issues": [
                    {
                      "fieldName": "fieldName",
                      "erorr": "This is the problem with the field"
                    },
                    {
                      "fieldName": "fieldOther",
                      "error": "This is the problem with the field"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "product"
        ],
        "summary": "Update a product",
        "description": "Update the product with different values.",
        "operationId": "updateProductDetails",
        "parameters": [
          {
            "name": "product_code",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "2mmSS"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/product"
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/400",
                  "title": "Bad Request",
                  "status": 400,
                  "detail": "The request is invalid.",
                  "issues": [
                    {
                      "fieldName": "fieldName",
                      "erorr": "This is the problem with the field"
                    },
                    {
                      "fieldName": "fieldOther",
                      "error": "This is the problem with the field"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {}
            }
          }
        }
      }
    },
    "/customers": {
      "get": {
        "tags": [
          "customer"
        ],
        "summary": "List of customers",
        "description": "Get a list of customers.",
        "operationId": "listCustomers",
        "parameters": [
          {
            "name": "customer_code",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "UKC01"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "John"
            }
          },
          {
            "name": "sort_col",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "customer_code",
                "created_at",
                "updated_at"
              ]
            }
          },
          {
            "name": "sort_dir",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_1"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/400",
                  "title": "Bad Request",
                  "status": 400,
                  "detail": "The request is invalid.",
                  "issues": [
                    {
                      "fieldName": "fieldName",
                      "erorr": "This is the problem with the field"
                    },
                    {
                      "fieldName": "fieldOther",
                      "error": "This is the problem with the field"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "customer"
        ],
        "summary": "Add customer",
        "description": "Add a new customer.",
        "operationId": "createCustomer",
        "requestBody": {
          "$ref": "#/components/requestBodies/customer"
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Location": {
                "description": "Link to view details of created customer",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string",
                  "example": "https://virtserver.swaggerhub.com/advanced5/bce/v1/customers/UKC01"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/400",
                  "title": "Bad Request",
                  "status": 400,
                  "detail": "The request is invalid.",
                  "issues": [
                    {
                      "fieldName": "fieldName",
                      "erorr": "This is the problem with the field"
                    },
                    {
                      "fieldName": "fieldOther",
                      "error": "This is the problem with the field"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customer_code}": {
      "get": {
        "tags": [
          "customer"
        ],
        "summary": "Find customer",
        "description": "Find a single customer.",
        "operationId": "viewCustomerDetails",
        "parameters": [
          {
            "name": "customer_code",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "UKC01"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/400",
                  "title": "Bad Request",
                  "status": 400,
                  "detail": "The request is invalid.",
                  "issues": [
                    {
                      "fieldName": "fieldName",
                      "erorr": "This is the problem with the field"
                    },
                    {
                      "fieldName": "fieldOther",
                      "error": "This is the problem with the field"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "customer"
        ],
        "summary": "Update customer",
        "description": "Update an existing customer.",
        "operationId": "updateCustomerDetails",
        "parameters": [
          {
            "name": "customer_code",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "UKC01"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/customerPut"
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/400",
                  "title": "Bad Request",
                  "status": 400,
                  "detail": "The request is invalid.",
                  "issues": [
                    {
                      "fieldName": "fieldName",
                      "erorr": "This is the problem with the field"
                    },
                    {
                      "fieldName": "fieldOther",
                      "error": "This is the problem with the field"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {}
            }
          }
        }
      }
    },
    "/customers/{customer_code}/delivery_addresses": {
      "get": {
        "tags": [
          "customer"
        ],
        "summary": "Get list of delivery addresses of the customer",
        "description": "Get list of delivery addresses of the customer.",
        "operationId": "listCustomerDeliveryAddresses",
        "parameters": [
          {
            "name": "customer_code",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "UKC01"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/allDeliveryAddresses"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/400",
                  "title": "Bad Request",
                  "status": 400,
                  "detail": "The request is invalid.",
                  "issues": [
                    {
                      "fieldName": "fieldName",
                      "erorr": "This is the problem with the field"
                    },
                    {
                      "fieldName": "fieldOther",
                      "error": "This is the problem with the field"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "customer"
        ],
        "summary": "Add new delivery address for a customer",
        "description": "Add new delivery address for a customer.",
        "operationId": "createCustomerDeliveryAddress",
        "parameters": [
          {
            "name": "customer_code",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "UKC01"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/deliveryAddress"
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Location": {
                "description": "Link to view details of created delivery address for the customer",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string",
                  "example": "https://virtserver.swaggerhub.com/advanced5/bce/v1/customers/UKC01/delivery_addresses/1"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/400",
                  "title": "Bad Request",
                  "status": 400,
                  "detail": "The request is invalid.",
                  "issues": [
                    {
                      "fieldName": "fieldName",
                      "erorr": "This is the problem with the field"
                    },
                    {
                      "fieldName": "fieldOther",
                      "error": "This is the problem with the field"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customer_code}/delivery_addresses/{delivery_address_code}": {
      "get": {
        "tags": [
          "customer"
        ],
        "summary": "Find delivery address",
        "description": "Find a single delivery address of the customer.",
        "operationId": "viewCustomerDeliveryAddressDetails",
        "parameters": [
          {
            "name": "customer_code",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "UKC01"
            }
          },
          {
            "name": "delivery_address_code",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deliveryAddress"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/400",
                  "title": "Bad Request",
                  "status": 400,
                  "detail": "The request is invalid.",
                  "issues": [
                    {
                      "fieldName": "fieldName",
                      "erorr": "This is the problem with the field"
                    },
                    {
                      "fieldName": "fieldOther",
                      "error": "This is the problem with the field"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "customer"
        ],
        "summary": "Update delivery address",
        "description": "Update delivery address of the customer.",
        "operationId": "updateCustomerDeliveryAddressDetails",
        "parameters": [
          {
            "name": "customer_code",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "UKC01"
            }
          },
          {
            "name": "delivery_address_code",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/deliveryAddress"
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/400",
                  "title": "Bad Request",
                  "status": 400,
                  "detail": "The request is invalid.",
                  "issues": [
                    {
                      "fieldName": "fieldName",
                      "erorr": "This is the problem with the field"
                    },
                    {
                      "fieldName": "fieldOther",
                      "error": "This is the problem with the field"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "customer"
        ],
        "summary": "Delete delivery address",
        "description": "Delete delivery address of the customer",
        "operationId": "deleteCustomerDeliveryAddress",
        "parameters": [
          {
            "name": "customer_code",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "UKC01"
            }
          },
          {
            "name": "delivery_address_code",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/400",
                  "title": "Bad Request",
                  "status": 400,
                  "detail": "The request is invalid.",
                  "issues": [
                    {
                      "fieldName": "fieldName",
                      "erorr": "This is the problem with the field"
                    },
                    {
                      "fieldName": "fieldOther",
                      "error": "This is the problem with the field"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {}
            }
          }
        }
      }
    },
    "/sales-orders": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "List of sales orders",
        "description": "Get a list of sales orders.",
        "operationId": "listSalesOrders",
        "parameters": [
          {
            "name": "sales_order_code",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 102
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "order",
                "invoiced",
                "partially invoiced"
              ]
            }
          },
          {
            "name": "sort_col",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "sales_order_code",
                "created_at",
                "updated_at"
              ]
            }
          },
          {
            "name": "sort_dir",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 50
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_2"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/400",
                  "title": "Bad Request",
                  "status": 400,
                  "detail": "The request is invalid.",
                  "issues": [
                    {
                      "fieldName": "fieldName",
                      "erorr": "This is the problem with the field"
                    },
                    {
                      "fieldName": "fieldOther",
                      "error": "This is the problem with the field"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "order"
        ],
        "summary": "Add sales order",
        "description": "Add a new sales order",
        "operationId": "createSalesOrder",
        "requestBody": {
          "$ref": "#/components/requestBodies/salesOrder"
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Location": {
                "description": "Link to view details of created sales order",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string",
                  "example": "https://virtserver.swaggerhub.com/advanced5/bce/v1/sales-orders/101"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/400",
                  "title": "Bad Request",
                  "status": 400,
                  "detail": "The request is invalid.",
                  "issues": [
                    {
                      "fieldName": "fieldName",
                      "erorr": "This is the problem with the field"
                    },
                    {
                      "fieldName": "fieldOther",
                      "error": "This is the problem with the field"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          }
        }
      }
    },
    "/sales-orders/{sales_order_code}": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Find sales order",
        "description": "Find a single sales order",
        "operationId": "viewSalesOrderDetails",
        "parameters": [
          {
            "name": "sales_order_code",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            },
            "example": 101
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/salesOrder"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/400",
                  "title": "Bad Request",
                  "status": 400,
                  "detail": "The request is invalid.",
                  "issues": [
                    {
                      "fieldName": "fieldName",
                      "erorr": "This is the problem with the field"
                    },
                    {
                      "fieldName": "fieldOther",
                      "error": "This is the problem with the field"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          }
        }
      }
    },
    "/sales-invoices": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "List of sales invoices",
        "description": "Get a list of sales invoices.",
        "operationId": "listSalesInvoices",
        "parameters": [
          {
            "name": "sales_invoice_code",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "name": "customer_code",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "UKC01"
          },
          {
            "name": "paid",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "true"
          },
          {
            "name": "sort_col",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "sales_invoice_code",
                "created_at",
                "updated_at"
              ]
            }
          },
          {
            "name": "sort_dir",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 50
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_3"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/400",
                  "title": "Bad Request",
                  "status": 400,
                  "detail": "The request is invalid.",
                  "issues": [
                    {
                      "fieldName": "fieldName",
                      "erorr": "This is the problem with the field"
                    },
                    {
                      "fieldName": "fieldOther",
                      "error": "This is the problem with the field"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "order"
        ],
        "summary": "Add sales invoice",
        "description": "Add a new sales invoice.",
        "operationId": "createSalesInvoice",
        "requestBody": {
          "$ref": "#/components/requestBodies/salesInvoice"
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Location": {
                "description": "Link to view details of created sales invoice",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string",
                  "example": "https://virtserver.swaggerhub.com/advanced5/bce/v1/sales-invoices/101"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/400",
                  "title": "Bad Request",
                  "status": 400,
                  "detail": "The request is invalid.",
                  "issues": [
                    {
                      "fieldName": "fieldName",
                      "erorr": "This is the problem with the field"
                    },
                    {
                      "fieldName": "fieldOther",
                      "error": "This is the problem with the field"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          }
        }
      }
    },
    "/sales-invoices/{sales_invoice_code}": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Find sales invoice",
        "description": "Find a single sales invoice",
        "operationId": "viewSalesInvoiceDetails",
        "parameters": [
          {
            "name": "sales_invoice_code",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/salesInvoice"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/400",
                  "title": "Bad Request",
                  "status": 400,
                  "detail": "The request is invalid.",
                  "issues": [
                    {
                      "fieldName": "fieldName",
                      "erorr": "This is the problem with the field"
                    },
                    {
                      "fieldName": "fieldOther",
                      "error": "This is the problem with the field"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          }
        }
      }
    },
    "/receipts": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "List of receipts",
        "description": "Get a list of receipts.",
        "operationId": "listReceipts",
        "parameters": [
          {
            "name": "customer_code",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "UKC01"
          },
          {
            "name": "sort_col",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "receipt_code",
                "created_at"
              ]
            }
          },
          {
            "name": "sort_dir",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 50
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_4"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/400",
                  "title": "Bad Request",
                  "status": 400,
                  "detail": "The request is invalid.",
                  "issues": [
                    {
                      "fieldName": "fieldName",
                      "erorr": "This is the problem with the field"
                    },
                    {
                      "fieldName": "fieldOther",
                      "error": "This is the problem with the field"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "order"
        ],
        "summary": "Add receipt",
        "description": "Add a new receipt.",
        "operationId": "createReceipt",
        "requestBody": {
          "$ref": "#/components/requestBodies/receipt"
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Location": {
                "description": "Link to view details of created receipt",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string",
                  "example": "https://virtserver.swaggerhub.com/advanced5/bce/v1/receipts/1"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/400",
                  "title": "Bad Request",
                  "status": 400,
                  "detail": "The request is invalid.",
                  "issues": [
                    {
                      "fieldName": "fieldName",
                      "erorr": "This is the problem with the field"
                    },
                    {
                      "fieldName": "fieldOther",
                      "error": "This is the problem with the field"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          }
        }
      }
    },
    "/receipts/{receipt_code}": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Find receipt",
        "description": "Find a single receipt.",
        "operationId": "viewReceiptDetails",
        "parameters": [
          {
            "name": "receipt_code",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/receipt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/400",
                  "title": "Bad Request",
                  "status": 400,
                  "detail": "The request is invalid.",
                  "issues": [
                    {
                      "fieldName": "fieldName",
                      "erorr": "This is the problem with the field"
                    },
                    {
                      "fieldName": "fieldOther",
                      "error": "This is the problem with the field"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          }
        }
      }
    },
    "/locations": {
      "get": {
        "tags": [
          "product"
        ],
        "summary": "List of Locations",
        "description": "Get list of all locations",
        "operationId": "listLocations",
        "parameters": [
          {
            "name": "location_code",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "Warehouse"
          },
          {
            "name": "sort_col",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "location_code",
                "created_at",
                "updated_at"
              ]
            }
          },
          {
            "name": "sort_dir",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 50
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_5"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/400",
                  "title": "Bad Request",
                  "status": 400,
                  "detail": "The request is invalid.",
                  "issues": [
                    {
                      "fieldName": "fieldName",
                      "erorr": "This is the problem with the field"
                    },
                    {
                      "fieldName": "fieldOther",
                      "error": "This is the problem with the field"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          }
        }
      }
    },
    "/locations/{location_code}": {
      "get": {
        "tags": [
          "product"
        ],
        "summary": "Find location",
        "description": "Fetch details of a single location",
        "operationId": "viewLocationDetails",
        "parameters": [
          {
            "name": "location_code",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/location"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/400",
                  "title": "Bad Request",
                  "status": 400,
                  "detail": "The request is invalid.",
                  "issues": [
                    {
                      "fieldName": "fieldName",
                      "erorr": "This is the problem with the field"
                    },
                    {
                      "fieldName": "fieldOther",
                      "error": "This is the problem with the field"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          }
        }
      }
    },
    "/bank-accounts": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "List of bank accounts",
        "description": "Get a list of bank accounts",
        "operationId": "listBankAccounts",
        "parameters": [
          {
            "name": "bank_account_code",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "BANK1"
          },
          {
            "name": "sort_col",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "bank_account_code",
                "created_at",
                "updated_at"
              ]
            }
          },
          {
            "name": "sort_dir",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 50
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_6"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/400",
                  "title": "Bad Request",
                  "status": 400,
                  "detail": "The request is invalid.",
                  "issues": [
                    {
                      "fieldName": "fieldName",
                      "erorr": "This is the problem with the field"
                    },
                    {
                      "fieldName": "fieldOther",
                      "error": "This is the problem with the field"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          }
        }
      }
    },
    "/exchange-rates": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Get a list of exchange rates",
        "description": "List of all Currencies + exchange rates",
        "operationId": "listExchangeRates",
        "parameters": [
          {
            "name": "currency_code",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "INR"
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "sort_col",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "currency_code",
                "created_at",
                "updated_at"
              ]
            }
          },
          {
            "name": "sort_dir",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 50
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_7"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/400",
                  "title": "Bad Request",
                  "status": 400,
                  "detail": "The request is invalid.",
                  "issues": [
                    {
                      "fieldName": "fieldName",
                      "erorr": "This is the problem with the field"
                    },
                    {
                      "fieldName": "fieldOther",
                      "error": "This is the problem with the field"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          }
        }
      }
    },
    "/vat-rates": {
      "get": {
        "tags": [
          "product"
        ],
        "summary": "Get a list of VAT rates",
        "description": "List of VAT rates",
        "operationId": "listVatRates",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/allVatRates"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/400",
                  "title": "Bad Request",
                  "status": 400,
                  "detail": "The request is invalid.",
                  "issues": [
                    {
                      "fieldName": "fieldName",
                      "erorr": "This is the problem with the field"
                    },
                    {
                      "fieldName": "fieldOther",
                      "error": "This is the problem with the field"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          }
        }
      }
    },
    "/vat-types": {
      "get": {
        "tags": [
          "customer"
        ],
        "summary": "Get a list of VAT types",
        "description": "List of VAT types",
        "operationId": "listVatTypes",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/allVatTypes"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/400",
                  "title": "Bad Request",
                  "status": 400,
                  "detail": "The request is invalid.",
                  "issues": [
                    {
                      "fieldName": "fieldName",
                      "erorr": "This is the problem with the field"
                    },
                    {
                      "fieldName": "fieldOther",
                      "error": "This is the problem with the field"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          }
        }
      }
    },
    "/accounts": {
      "get": {
        "tags": [
          "account"
        ],
        "summary": "Get a list of Accounts",
        "description": "List of Accounts.",
        "operationId": "listAccounts",
        "parameters": [
          {
            "name": "account_code",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "DEFSAL"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "Default Sales Account"
          },
          {
            "name": "account_type",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "Revenue",
                "Expense",
                "Summary",
                "BalanceSheet",
                "Asset",
                "CreditCardAccount",
                "CurrentAccount",
                "DirectorsLoanAccount",
                "Finance",
                "LoanAccount",
                "Payroll",
                "PettyCashAccount",
                "Prepaid",
                "Commission"
              ]
            }
          },
          {
            "name": "parent_account_code",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "PNLREV"
          },
          {
            "name": "all_descendants",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_budget_account",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 20
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_8"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/400",
                  "title": "Bad Request",
                  "status": 400,
                  "detail": "The request is invalid.",
                  "issues": [
                    {
                      "fieldName": "fieldName",
                      "erorr": "This is the problem with the field"
                    },
                    {
                      "fieldName": "fieldOther",
                      "error": "This is the problem with the field"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_code}": {
      "get": {
        "tags": [
          "account"
        ],
        "summary": "Find account",
        "description": "Find a single account.",
        "operationId": "viewAccountDetails",
        "parameters": [
          {
            "name": "account_code",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "DEFSAL"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                },
                "example": {
                  "type": "http://oneadvanced.com/validation_error",
                  "title": "Bad Request",
                  "status": 400,
                  "detail": "The request is invalid.",
                  "invalid_params": [
                    {
                      "field": "code",
                      "error": "Code is required."
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {}
            }
          }
        }
      },
      "patch": {
        "tags": [
          "account"
        ],
        "summary": "Update an existing account",
        "description": "Update an existing account.",
        "operationId": "updateAccountDetails",
        "parameters": [
          {
            "name": "account_code",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "DEFSAL"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/accountPut"
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                },
                "example": {
                  "type": "http://oneadvanced.com/validation_error",
                  "title": "Bad Request",
                  "status": 400,
                  "detail": "The request is invalid.",
                  "invalid_params": [
                    {
                      "field": "code",
                      "error": "Code is required."
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {}
            }
          }
        }
      }
    },
    "/accounts/{account_code}/actual-year-to-period": {
      "get": {
        "tags": [
          "account"
        ],
        "summary": "Find account actual value for year to period",
        "description": "Find account actual value for year to period.",
        "operationId": "ViewYearToPeriodActual",
        "parameters": [
          {
            "name": "account_code",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "DEFSAL"
            }
          },
          {
            "name": "year",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "2020"
            }
          },
          {
            "name": "period",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "9"
            }
          },
          {
            "name": "project_name",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BCE"
            }
          },
          {
            "name": "department_name",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "SALES"
            }
          },
          {
            "name": "strict",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/actual"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {}
            }
          }
        }
      }
    },
    "/accounts/{account_code}/actual-period": {
      "get": {
        "tags": [
          "account"
        ],
        "summary": "Find account actual value for specific period",
        "description": "Find account actual value for specific period.",
        "operationId": "ViewPeriodActual",
        "parameters": [
          {
            "name": "account_code",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "DEFSAL"
            }
          },
          {
            "name": "period",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "9"
            }
          },
          {
            "name": "year",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "2020"
            }
          },
          {
            "name": "project_name",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BCE"
            }
          },
          {
            "name": "department_name",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "SALES"
            }
          },
          {
            "name": "strict",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/actual"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {}
            }
          }
        }
      }
    },
    "/accounts/{account_code}/actual-system-to-year-end": {
      "get": {
        "tags": [
          "account"
        ],
        "summary": "Find account actual value for System to year end",
        "description": "Find account actual value for System to year end.",
        "operationId": "ViewSystemToYearActual",
        "parameters": [
          {
            "name": "account_code",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "DEFSAL"
            }
          },
          {
            "name": "year",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "2020"
            }
          },
          {
            "name": "project_name",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BCE"
            }
          },
          {
            "name": "department_name",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "SALES"
            }
          },
          {
            "name": "strict",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/actual"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {}
            }
          }
        }
      }
    },
    "/accounts/{account_code}/actual-year-total": {
      "get": {
        "tags": [
          "account"
        ],
        "summary": "Find account actual value for Year Total",
        "description": "Find account actual value for Year Total.",
        "operationId": "ViewYearTotalActual",
        "parameters": [
          {
            "name": "account_code",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "DEFSAL"
            }
          },
          {
            "name": "year",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "2020"
            }
          },
          {
            "name": "project_name",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BCE"
            }
          },
          {
            "name": "department_name",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "SALES"
            }
          },
          {
            "name": "strict",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/actual"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {}
            }
          }
        }
      }
    },
    "/accounts/{account_code}/actual-system": {
      "get": {
        "tags": [
          "account"
        ],
        "summary": "Find account actual value from start of system to future",
        "description": "Find account actual value from start of system to future.",
        "operationId": "ViewSystemActual",
        "parameters": [
          {
            "name": "account_code",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "DEFSAL"
            }
          },
          {
            "name": "project_name",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BCE"
            }
          },
          {
            "name": "department_name",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "SALES"
            }
          },
          {
            "name": "strict",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/actual"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {}
            }
          }
        }
      }
    },
    "/budget-models": {
      "get": {
        "tags": [
          "budget"
        ],
        "summary": "Get list of all the Budget Models",
        "description": "List of Budget Models.",
        "operationId": "listBudgetModels",
        "parameters": [
          {
            "name": "budget_code",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "BUD01"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "Budget"
          },
          {
            "name": "financial_year",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "2020"
          },
          {
            "name": "is_live",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "sort_col",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "budget_code",
                "financial_year",
                "created_at",
                "updated_at"
              ]
            }
          },
          {
            "name": "sort_dir",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 20
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_9"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                },
                "example": {
                  "type": "http://oneadvanced.com/validation_error",
                  "title": "Bad Request",
                  "status": 400,
                  "detail": "The request is invalid.",
                  "invalid_params": [
                    {
                      "field": "code",
                      "error": "Code is required."
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {}
            }
          }
        }
      }
    },
    "/budget-models/{budget_code}": {
      "get": {
        "tags": [
          "budget"
        ],
        "summary": "Find budget model",
        "description": "Find budget model",
        "operationId": "viewBudgetModelDetails",
        "parameters": [
          {
            "name": "budget_code",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "BUD01"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/budgetModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                },
                "example": {
                  "type": "http://oneadvanced.com/validation_error",
                  "title": "Bad Request",
                  "status": 400,
                  "detail": "The request is invalid.",
                  "invalid_params": [
                    {
                      "field": "code",
                      "error": "Code is required."
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {}
            }
          }
        }
      },
      "put": {
        "tags": [
          "budget"
        ],
        "summary": "Update budget model",
        "description": "Update budget model",
        "operationId": "updateBudgetModel",
        "parameters": [
          {
            "name": "budget_code",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "BUD01"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/budgetModelPut"
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                },
                "example": {
                  "type": "http://oneadvanced.com/validation_error",
                  "title": "Bad Request",
                  "status": 400,
                  "detail": "The request is invalid.",
                  "invalid_params": [
                    {
                      "field": "code",
                      "error": "Code is required."
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {}
            }
          }
        }
      }
    },
    "/budget-models/{budget_code}/accounts": {
      "get": {
        "tags": [
          "budget"
        ],
        "summary": "Find all the accounts of a budget model",
        "description": "Get all the accounts of a budget model.",
        "operationId": "listBudgetModelAccounts",
        "parameters": [
          {
            "name": "budget_code",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "BUD01"
          },
          {
            "name": "account_code",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "DEFSAL"
          },
          {
            "name": "sort_col",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "account_code",
                "created_at",
                "updated_at"
              ]
            }
          },
          {
            "name": "sort_dir",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 20
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_10"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                },
                "example": {
                  "type": "http://oneadvanced.com/validation_error",
                  "title": "Bad Request",
                  "status": 400,
                  "detail": "The request is invalid.",
                  "invalid_params": [
                    {
                      "field": "code",
                      "error": "Code is required."
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {}
            }
          }
        }
      }
    },
    "/budget-models/{budget_code}/accounts/{account_code}": {
      "get": {
        "tags": [
          "budget"
        ],
        "summary": "Find single account of budget model",
        "description": "Get details of single account of budget model",
        "operationId": "viewBudgetModelAccountDetail",
        "parameters": [
          {
            "name": "budget_code",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "BUD01"
          },
          {
            "name": "account_code",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "DEFSAL"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/budgetAccount"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                },
                "example": {
                  "type": "http://oneadvanced.com/validation_error",
                  "title": "Bad Request",
                  "status": 400,
                  "detail": "The request is invalid.",
                  "invalid_params": [
                    {
                      "field": "code",
                      "error": "Code is required."
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {}
            }
          }
        }
      }
    },
    "/budget-models/{budget_code}/accounts/{account_code}/budget-periods": {
      "get": {
        "tags": [
          "budget"
        ],
        "summary": "Find all the budget periods of an account",
        "description": "Get details of an account's budget periods.",
        "operationId": "listBudgetModelAccountBudgetPeriods",
        "parameters": [
          {
            "name": "budget_code",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "BUD01"
          },
          {
            "name": "account_code",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "DEFSAL"
          },
          {
            "name": "period",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "12"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 20
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_11"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {}
            }
          }
        }
      }
    },
    "/budget-models/{budget_code}/accounts/{account_code}/budget-periods/{period}": {
      "get": {
        "tags": [
          "budget"
        ],
        "summary": "Find single budget period of an account",
        "description": "Get details of a single budget period of an account",
        "operationId": "viewBudgetModelAccountBudgetPeriodDetails",
        "parameters": [
          {
            "name": "budget_code",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "BUD01"
          },
          {
            "name": "account_code",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "DEFSAL"
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "12"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/budgetPeriod"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {}
            }
          }
        }
      },
      "put": {
        "tags": [
          "budget"
        ],
        "summary": "Update budget period details of an account",
        "description": "Update budget period details of an account",
        "operationId": "updateBudgetModelAccountBudgetPeriodDetails",
        "parameters": [
          {
            "name": "budget_code",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "BUD01"
          },
          {
            "name": "account_code",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "DEFSAL"
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "12"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/budgetPeriodPut"
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                },
                "example": {
                  "type": "http://oneadvanced.com/validation_error",
                  "title": "Bad Request",
                  "status": 400,
                  "detail": "The request is invalid.",
                  "invalid_params": [
                    {
                      "field": "code",
                      "error": "Code is required."
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/401",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsModel"
                },
                "example": {
                  "type": "https://oneadvanced.com/problem/403",
                  "title": "Forbidden",
                  "status": 403
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {}
            }
          }
        }
      }
    },
    "/version": {
      "get": {
        "tags": [
          "default"
        ],
        "summary": "Shows application version",
        "description": "Response indicates the application version",
        "operationId": "version",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/versionDetails"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/ping": {
      "get": {
        "tags": [
          "default"
        ],
        "summary": "Server heartbeat operation",
        "description": "Response indicates that the service is functional.",
        "operationId": "ping",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": []
      },
      "x-zally-ignore": [
        134
      ]
    }
  },
  "components": {
    "schemas": {
      "auth": {
        "type": "object",
        "properties": {
          "api_key": {
            "type": "string",
            "example": "2ced1c935ef39df66ae238e3fa4bef4d"
          },
          "login": {
            "type": "string",
            "example": "admin"
          },
          "password": {
            "type": "string",
            "example": "Password-1"
          }
        }
      },
      "authToken": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxLCJ0aW1lc3RhbXAiOiIyMDE5LTExLTA1IDE1OjQ5OjI5ICswNTMwIiwiZXhwIjoxNTcyOTQ5MjI5fQ.4p8HnBtjyfhYlG3ZUphUiU5hFwQrkNLLeLFKWMt4IG8"
          },
          "token_type": {
            "type": "string",
            "example": "bearer"
          },
          "expires_in": {
            "type": "string",
            "example": "3600"
          }
        }
      },
      "company": {
        "type": "object",
        "properties": {
          "company_id": {
            "type": "string",
            "example": "1"
          },
          "company_name": {
            "type": "string",
            "example": "Advanced Manufacturing Tech"
          },
          "address": {
            "$ref": "#/components/schemas/address"
          },
          "company_incorporated": {
            "type": "boolean"
          },
          "company_number": {
            "type": "string",
            "example": "5965280"
          },
          "vat_registered": {
            "type": "boolean"
          },
          "vat_number": {
            "type": "string",
            "example": "12345"
          }
        }
      },
      "allCompanies": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/company"
            }
          }
        },
        "example": {
          "items": [
            {
              "company_id": "1",
              "company_name": "Advanced Manufacturing Tech",
              "address": {
                "address_line_1": "Ditton Park",
                "address_line_2": "Riding Court Road",
                "address_line_3": "Datchet, Slough",
                "address_line_4": "Berkshire",
                "postcode": "SL3 9LL",
                "country_code": "UK"
              },
              "company_incorporated": true,
              "company_number": "5965280",
              "vat_registered": true,
              "vat_number": "12345"
            }
          ]
        }
      },
      "vatRate": {
        "type": "object",
        "properties": {
          "vat_rate_id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "UK Standard Rate"
          },
          "rate": {
            "type": "number",
            "format": "float",
            "example": 20
          },
          "country_code": {
            "type": "string",
            "example": "UK"
          }
        }
      },
      "allVatRates": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/vatRate"
            }
          }
        },
        "example": {
          "items": [
            {
              "vat_rate_id": 1,
              "name": "UK Standard Rate",
              "rate": 20,
              "country_code": "UK"
            },
            {
              "vat_rate_id": 2,
              "name": "UK Zero Rate",
              "rate": 0,
              "country_code": "UK"
            },
            {
              "vat_rate_id": 3,
              "name": "UK Exempt Rate",
              "rate": 0,
              "country_code": "UK"
            },
            {
              "vat_rate_id": 4,
              "name": "UK Reduced Rate",
              "rate": 5,
              "country_code": "UK"
            }
          ]
        }
      },
      "vatType": {
        "type": "object",
        "properties": {
          "vat_type_id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "UK Standard"
          }
        }
      },
      "allVatTypes": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/vatType"
            }
          }
        },
        "example": {
          "items": [
            {
              "vat_type_id": 1,
              "name": "UK Standard"
            },
            {
              "vat_type_id": 2,
              "name": "UK Zero Rate"
            },
            {
              "vat_type_id": 3,
              "name": "UK Exempt"
            },
            {
              "vat_type_id": 4,
              "name": "EU Export"
            },
            {
              "vat_type_id": 5,
              "name": "Non EU Export"
            }
          ]
        }
      },
      "exchangeRate": {
        "type": "object",
        "properties": {
          "currency_code": {
            "type": "string",
            "example": "INR"
          },
          "name": {
            "type": "string",
            "example": "Rupee"
          },
          "country_code": {
            "type": "string",
            "example": "IN"
          },
          "rate_vs_gbp": {
            "type": "string",
            "example": "84"
          }
        }
      },
      "allExchangeRates": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/exchangeRate"
            }
          }
        },
        "example": {
          "items": [
            {
              "currency_code": "ARS",
              "name": "Peso",
              "country_code": "AR",
              "rate_vs_gbp": "19.72"
            },
            {
              "currency_code": "AUD",
              "name": "Dollar",
              "country_code": "AU",
              "rate_vs_gbp": "1.6317"
            }
          ]
        }
      },
      "StockCategory": {
        "type": "object",
        "properties": {
          "category_id": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "StockItem"
          }
        }
      },
      "allStockCategories": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StockCategory"
            }
          }
        },
        "example": {
          "items": [
            {
              "category_id": 1,
              "name": "StockItem"
            },
            {
              "category_id": 2,
              "name": "ServiceItem"
            },
            {
              "category_id": 3,
              "name": "ConsumableItem"
            },
            {
              "category_id": 4,
              "name": "AssetOrderItem"
            },
            {
              "category_id": 5,
              "name": "KitItem"
            }
          ]
        }
      },
      "productEnquiry": {
        "type": "object",
        "properties": {
          "location_code": {
            "type": "integer",
            "example": 1
          },
          "qty_on_hand": {
            "type": "integer",
            "example": 2010
          },
          "on_demand": {
            "type": "integer",
            "example": 210
          },
          "picked": {
            "type": "integer",
            "example": 50
          },
          "qty_available": {
            "type": "integer",
            "example": 1750
          }
        }
      },
      "product": {
        "type": "object",
        "properties": {
          "product_code": {
            "type": "string",
            "example": "2mmSS"
          },
          "name": {
            "type": "string",
            "example": "2mm Stainless Steel"
          },
          "product_type": {
            "type": "string",
            "example": "StockItem"
          },
          "description": {
            "type": "string",
            "example": "It is an alloy of iron and carbon."
          },
          "sales_uom": {
            "type": "string",
            "example": "each"
          },
          "list_price": {
            "multipleOf": 0.01,
            "type": "number",
            "example": 25
          },
          "cost_price": {
            "multipleOf": 0.01,
            "type": "number",
            "example": 15
          },
          "vat_rate": {
            "$ref": "#/components/schemas/vatRate"
          },
          "manufacturer_part_number": {
            "type": "string",
            "example": "100-750-3434-A"
          },
          "manufacturer_part_name": {
            "type": "string",
            "example": "Engineering Co."
          },
          "weight": {
            "type": "number",
            "format": "float",
            "example": 1
          },
          "url": {
            "type": "string",
            "example": "https://www.oneadvanced.com/"
          },
          "lead_days": {
            "type": "number",
            "format": "float",
            "example": 2
          },
          "barcode": {
            "type": "string",
            "example": "1234567890"
          },
          "default_stock_location": {
            "$ref": "#/components/schemas/location"
          },
          "sell_online": {
            "type": "boolean",
            "example": true
          },
          "stock_enquiry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/productEnquiry"
            }
          }
        },
        "description": "Catalogue Item"
      },
      "productForm": {
        "required": [
          "name",
          "product_code"
        ],
        "type": "object",
        "properties": {
          "product_code": {
            "type": "string",
            "example": "2mmSS"
          },
          "name": {
            "type": "string",
            "example": "2mm Stainless Steel"
          },
          "description": {
            "type": "string",
            "example": "It is an alloy of iron and carbon."
          },
          "sales_uom": {
            "type": "string",
            "example": "each"
          },
          "list_price": {
            "multipleOf": 0.01,
            "type": "number",
            "example": 25
          },
          "vat_rate_id": {
            "type": "string",
            "example": "1"
          },
          "manufacturer_part_number": {
            "type": "string",
            "example": "100-750-3434-A"
          },
          "manufacturer_part_name": {
            "type": "string",
            "example": "Engineering Co."
          },
          "weight": {
            "type": "number",
            "format": "float",
            "example": 1
          },
          "url": {
            "type": "string",
            "example": "https://www.oneadvanced.com/"
          },
          "lead_days": {
            "type": "number",
            "format": "float",
            "example": 2
          },
          "barcode": {
            "type": "string",
            "example": "1234567890"
          },
          "default_stock_location_id": {
            "type": "string",
            "example": "1"
          },
          "sell_online": {
            "type": "boolean",
            "example": true
          }
        },
        "description": "Catalogue Item form"
      },
      "allProducts": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/product"
            }
          }
        },
        "example": {
          "items": [
            {
              "product_code": "2mmSS",
              "name": "2mm Stainless Steel",
              "product_type": "StockItem",
              "description": "It is an alloy of iron and carbon.",
              "sales_uom": "each",
              "list_price": 25,
              "cost_price": 10,
              "vat_rate": {
                "vat_rate_id": 1,
                "name": "UK Standard Rate",
                "rate": 20,
                "country_code": "UK"
              },
              "manufacturer_part_number": "100-750-3434-A",
              "manufacturer_part_name": "Engineering Co.",
              "weight": 1,
              "url": "https://www.oneadvanced.com/",
              "lead_days": 2,
              "barcode": "1234567890",
              "default_stock_location": {
                "location_code": 1,
                "name": "Warehouse",
                "address": {
                  "address_line_1": "Ditton Park",
                  "address_line_2": "Riding Court Road",
                  "address_line_3": "Datchet, Slough",
                  "address_line_4": "Berkshire",
                  "postcode": "SL3 9LL",
                  "country_code": "UK"
                }
              },
              "sell_online": true,
              "stock_enquiry": [
                {
                  "location_code": 1,
                  "qty_on_hand": 1500,
                  "on_demand": 10,
                  "picked": 10,
                  "qty_available": 1480
                }
              ]
            },
            {
              "product_code": "HOIL",
              "name": "Heated Oil",
              "product_type": "StockItem",
              "description": "Oil used for heating.",
              "sales_uom": "each",
              "list_price": 1200,
              "cost_price": 1000,
              "vat_rate": {
                "vat_rate_id": 2,
                "name": "UK Zero Rate",
                "rate": 0,
                "country_code": "UK"
              },
              "manufacturer_part_number": "2001-353",
              "manufacturer_part_name": "International Oil Co.",
              "weight": 1,
              "url": "www.oneadvanced.com",
              "barcode": "123456711",
              "default_stock_location": {
                "location_code": 1,
                "name": "Warehouse",
                "address": {
                  "address_line_1": "Ditton Park",
                  "address_line_2": "Riding Court Road",
                  "address_line_3": "Datchet, Slough",
                  "address_line_4": "Berkshire",
                  "postcode": "SL3 9LL",
                  "country_code": "UK"
                }
              },
              "sell_online": true,
              "stock_enquiry": [
                {
                  "location_code": 1,
                  "qty_on_hand": 100,
                  "on_demand": 10,
                  "picked": 10,
                  "qty_available": 80
                }
              ]
            }
          ]
        }
      },
      "customer": {
        "type": "object",
        "properties": {
          "customer_code": {
            "type": "string",
            "example": "UKC01"
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "address": {
            "$ref": "#/components/schemas/address"
          },
          "email": {
            "type": "string",
            "example": "support@example.com"
          },
          "vat_number": {
            "type": "string",
            "example": "12345"
          },
          "vat_type": {
            "$ref": "#/components/schemas/vatType"
          },
          "currency": {
            "type": "string",
            "example": "GBP"
          },
          "main_contact": {
            "$ref": "#/components/schemas/contact"
          },
          "delivery_addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/deliveryAddress"
            }
          },
          "account_status": {
            "type": "string",
            "example": "Credit Account"
          }
        },
        "description": "Full details for a customer"
      },
      "customerForm": {
        "required": [
          "customer_code",
          "name"
        ],
        "type": "object",
        "properties": {
          "customer_code": {
            "type": "string",
            "example": "UKC01"
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "address": {
            "$ref": "#/components/schemas/address"
          },
          "email": {
            "type": "string",
            "example": "support@example.com"
          },
          "vat_number": {
            "type": "string",
            "example": "12345"
          },
          "vat_type_id": {
            "type": "string",
            "example": "1"
          },
          "currency": {
            "type": "string",
            "example": "GBP"
          },
          "main_contact": {
            "$ref": "#/components/schemas/contact"
          },
          "delivery_addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/deliveryAddress"
            }
          },
          "account_status": {
            "type": "string",
            "example": "Credit Account"
          }
        }
      },
      "customerPutForm": {
        "required": [
          "customer_code",
          "name"
        ],
        "type": "object",
        "properties": {
          "customer_code": {
            "type": "string",
            "example": "UKC01"
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "address": {
            "$ref": "#/components/schemas/address"
          },
          "email": {
            "type": "string",
            "example": "support@example.com"
          },
          "vat_number": {
            "type": "string",
            "example": "12345"
          },
          "vat_type_id": {
            "type": "string",
            "example": "1"
          },
          "currency": {
            "type": "string",
            "example": "GBP"
          },
          "main_contact": {
            "$ref": "#/components/schemas/contact"
          },
          "account_status": {
            "type": "string",
            "example": "Credit Account"
          }
        }
      },
      "allDeliveryAddresses": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/deliveryAddress"
            }
          }
        },
        "example": {
          "items": [
            {
              "delivery_address_code": 1,
              "contact_name": "Chris Evans",
              "address_line_1": "Pioneer Court",
              "address_line_2": "Pioneer Way",
              "address_line_3": "Whitwood",
              "address_line_4": "Castleford",
              "postcode": "WF10 5QU",
              "country_code": "UK"
            },
            {
              "delivery_address_code": 2,
              "contact_name": "Ellen Evans",
              "address_line_1": "OHM Business Park",
              "address_line_2": "Building 1-4A, 5A, 5B",
              "address_line_3": "Subhanpura",
              "address_line_4": "Baroda",
              "postcode": "390 023",
              "country_code": "IN"
            }
          ]
        }
      },
      "pagination": {
        "type": "object",
        "properties": {
          "first": {
            "type": "string"
          },
          "prev": {
            "type": "string"
          },
          "self": {
            "type": "string"
          },
          "next": {
            "type": "string"
          },
          "last": {
            "type": "string"
          },
          "page_size": {
            "type": "number"
          }
        },
        "example": {
          "first": "https://virtserver.swaggerhub.com/advanced5/bce/v1/customers?page=1",
          "prev": "https://virtserver.swaggerhub.com/advanced5/bce/v1/customers?page=1",
          "self": "https://virtserver.swaggerhub.com/advanced5/bce/v1/customers?page=2",
          "next": "https://virtserver.swaggerhub.com/advanced5/bce/v1/customers?page=3",
          "last": "https://virtserver.swaggerhub.com/advanced5/bce/v1/customers?page=10",
          "page_size": 20
        }
      },
      "allCustomers": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/customer"
            }
          }
        },
        "example": {
          "items": [
            {
              "customer_code": "UKC01",
              "name": "John Doe",
              "address": {
                "address_line_1": "Ditton Park",
                "address_line_2": "Riding Court Road",
                "address_line_3": "Datchet, Slough",
                "address_line_4": "Berkshire",
                "postcode": "SL3 9LL",
                "country_code": "UK"
              },
              "email": "support@example.com",
              "vat_number": "12345",
              "vat_type": {
                "vat_type_id": 1,
                "name": "UK Standard"
              },
              "currency": "GBP",
              "main_contact": {
                "name": "Jane Doe",
                "telephone": "0845 160 6162",
                "fax": "0330 404 0806",
                "web_address": "https://www.oneadvanced.com/"
              },
              "delivery_addresses": [
                {
                  "delivery_address_code": 1,
                  "contact_name": "Chris Evans",
                  "address_line_1": "Pioneer Court",
                  "address_line_2": "Pioneer Way",
                  "address_line_3": "Whitwood",
                  "address_line_4": "Castleford",
                  "postcode": "WF10 5QU",
                  "country_code": "UK"
                },
                {
                  "delivery_address_code": 2,
                  "contact_name": "Ellen Evans",
                  "address_line_1": "OHM Business Park",
                  "address_line_2": "Building 1-4A, 5A, 5B",
                  "address_line_3": "Subhanpura",
                  "address_line_4": "Baroda",
                  "postcode": "390 023",
                  "country_code": "IN"
                }
              ],
              "account_status": "Credit Account"
            }
          ]
        }
      },
      "salesOrder": {
        "type": "object",
        "properties": {
          "sales_order_code": {
            "type": "integer",
            "example": 101
          },
          "customer_code": {
            "type": "string",
            "example": "UKC01"
          },
          "description": {
            "type": "string",
            "example": "This has 1 item."
          },
          "status": {
            "type": "string",
            "example": "invoiced",
            "enum": [
              "order",
              "invoiced",
              "partially invoiced"
            ]
          },
          "customer_ref": {
            "type": "string",
            "example": "PO 1234"
          },
          "vat_type": {
            "$ref": "#/components/schemas/vatType"
          },
          "currency": {
            "type": "string",
            "example": "GBP"
          },
          "line_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/salesOrderLineItems"
            }
          },
          "net_amount": {
            "type": "number",
            "format": "float",
            "example": 100
          },
          "vat_amount": {
            "type": "number",
            "format": "float",
            "example": 20
          },
          "total": {
            "type": "number",
            "format": "float",
            "example": 120
          },
          "picked_status": {
            "type": "string",
            "example": "1/1"
          },
          "order_date": {
            "type": "string",
            "format": "date",
            "example": "2020-02-17"
          },
          "delivery_address": {
            "$ref": "#/components/schemas/salesOrder_delivery_address"
          },
          "delivery_note": {
            "type": "string",
            "example": "Handle with care as it has sharp edges."
          },
          "sales_invoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/salesInvoiceInOrder"
            }
          }
        },
        "description": "Full sales order detail"
      },
      "salesOrderForm": {
        "required": [
          "customer_code",
          "line_items"
        ],
        "type": "object",
        "properties": {
          "customer_code": {
            "type": "string",
            "example": "UKC01"
          },
          "description": {
            "type": "string",
            "example": "This has 1 item."
          },
          "customer_ref": {
            "type": "string",
            "example": "PO 1234"
          },
          "vat_type_id": {
            "type": "string",
            "example": "1"
          },
          "currency": {
            "type": "string",
            "example": "GBP"
          },
          "line_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/salesOrderLineItemsForm"
            }
          },
          "contact_name": {
            "type": "string",
            "example": "Peter Swan"
          },
          "address_line_1": {
            "type": "string",
            "example": "Ditton Park"
          },
          "address_line_2": {
            "type": "string",
            "example": "Riding Court Road"
          },
          "address_line_3": {
            "type": "string",
            "example": "Datchet, Slough"
          },
          "address_line_4": {
            "type": "string",
            "example": "Berkshire"
          },
          "postcode": {
            "type": "string",
            "example": "SL3 9LL"
          },
          "country_code": {
            "type": "string",
            "example": "UK"
          },
          "delivery_note": {
            "type": "string",
            "example": "Handle with care as it has sharp edges."
          }
        },
        "description": "Sales order form"
      },
      "salesOrderLineItems": {
        "type": "object",
        "properties": {
          "product_code": {
            "type": "string",
            "example": "2mmSS"
          },
          "description": {
            "type": "string",
            "example": "Stainless Steel"
          },
          "location_code": {
            "type": "integer",
            "example": 1
          },
          "quantity": {
            "type": "number",
            "format": "float",
            "example": 2
          },
          "list_price": {
            "type": "number",
            "format": "float",
            "example": 100
          },
          "unit_price": {
            "type": "number",
            "format": "float",
            "example": 100
          },
          "vat_value": {
            "type": "number",
            "format": "float",
            "example": 10
          },
          "picked": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "salesInvoiceForm": {
        "required": [
          "customer_code",
          "line_items"
        ],
        "type": "object",
        "properties": {
          "customer_code": {
            "type": "string",
            "example": "UKC01"
          },
          "customer_ref": {
            "type": "string",
            "example": "PO 1234"
          },
          "vat_type_id": {
            "type": "string",
            "example": "1"
          },
          "currency": {
            "type": "string",
            "example": "GBP"
          },
          "invoice_date": {
            "type": "string",
            "format": "date",
            "example": "2020-03-03"
          },
          "line_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/salesOrderLineItemsForm"
            }
          },
          "contact_name": {
            "type": "string",
            "example": "Peter Swan"
          },
          "address_line_1": {
            "type": "string",
            "example": "Ditton Park"
          },
          "address_line_2": {
            "type": "string",
            "example": "Riding Court Road"
          },
          "address_line_3": {
            "type": "string",
            "example": "Datchet, Slough"
          },
          "address_line_4": {
            "type": "string",
            "example": "Berkshire"
          },
          "postcode": {
            "type": "string",
            "example": "SL3 9LL"
          },
          "country_code": {
            "type": "string",
            "example": "UK"
          },
          "delivery_note": {
            "type": "string",
            "example": "Handle with care as it has sharp edges."
          }
        },
        "description": "Sales invoice form"
      },
      "salesInvoiceLineItems": {
        "type": "object",
        "properties": {
          "product_code": {
            "type": "string",
            "example": "2mmSS"
          },
          "description": {
            "type": "string",
            "example": "Stainless Steel"
          },
          "location_code": {
            "type": "integer",
            "example": 1
          },
          "quantity": {
            "type": "number",
            "format": "float",
            "example": 2
          },
          "list_price": {
            "type": "number",
            "format": "float",
            "example": 100
          },
          "unit_price": {
            "type": "number",
            "format": "float",
            "example": 100
          },
          "vat_value": {
            "type": "number",
            "format": "float",
            "example": 10
          }
        }
      },
      "salesOrderLineItemsForm": {
        "type": "object",
        "properties": {
          "product_code": {
            "type": "string",
            "example": "2mmSS"
          },
          "description": {
            "type": "string",
            "example": "Stainless Steel"
          },
          "location_code": {
            "type": "integer",
            "example": 1
          },
          "quantity": {
            "type": "number",
            "format": "float",
            "example": 2
          },
          "list_price": {
            "type": "number",
            "format": "float",
            "example": 100
          },
          "unit_price": {
            "type": "number",
            "format": "float",
            "example": 100
          },
          "vat_value": {
            "type": "number",
            "format": "float",
            "example": 10
          }
        }
      },
      "allSalesOrders": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/salesOrder"
            }
          }
        },
        "example": {
          "items": [
            {
              "sales_order_code": 10,
              "customer_code": "UKC01",
              "description": "This has 1 item.",
              "status": "partially invoiced",
              "vat_type": {
                "vat_type_id": 1,
                "name": "UK Standard"
              },
              "customer_ref": "PO 1234",
              "currency": "GBP",
              "line_items": [
                {
                  "product_code": "2mmSS",
                  "description": "Stainless Steel",
                  "location_code": 1,
                  "quantity": 2,
                  "list_price": 100,
                  "unit_price": 50,
                  "vat_value": 10,
                  "picked": true
                },
                {
                  "product_code": "Oil",
                  "description": "Castor Oil",
                  "location_code": 1,
                  "quantity": 20,
                  "list_price": 500,
                  "unit_price": 500,
                  "vat_value": 1000,
                  "picked": false
                }
              ],
              "net_amount": 10100,
              "vat_amount": 1010,
              "total": 11110,
              "picked_status": "1/2",
              "order_date": "2020-02-17",
              "delivery_address": {
                "contact_name": "Chris Evans",
                "address_line_1": "Pioneer Court",
                "address_line_2": "Pioneer Way",
                "address_line_3": "Whitwood",
                "address_line_4": "Castleford",
                "postcode": "WF10 5QU",
                "country_code": "UK"
              },
              "delivery_note": "Handle with care as it has sharp edges.",
              "sales_invoices": [
                {
                  "sales_invoice_code": 1,
                  "customer_code": "UKSC01",
                  "invoice_date": "2018-03-20",
                  "paid": true
                },
                {
                  "sales_invoice_code": 2,
                  "customer_code": "UKC0101",
                  "invoice_date": "2019-11-15",
                  "paid": false
                }
              ]
            },
            {
              "sales_order_code": 102,
              "customer_code": "UKC01",
              "description": "This has 1 item.",
              "status": "order",
              "customer_ref": "PO 1234",
              "vat_type": {
                "vat_type_id": 1,
                "name": "UK Standard"
              },
              "currency": "GBP",
              "line_items": [
                {
                  "product_code": "2mmSS",
                  "description": "Stainless Steel",
                  "location_code": 1,
                  "quantity": 2,
                  "list_price": 50,
                  "unit_price": 50,
                  "vat_value": 10,
                  "picked": true
                }
              ],
              "net_amount": 100,
              "vat_amount": 10,
              "total": 110,
              "picked_status": "1/1",
              "order_date": "2020-02-11",
              "delivery_address": {
                "contact_name": "Chris Evans",
                "address_line_1": "Pioneer Court",
                "address_line_2": "Pioneer Way",
                "address_line_3": "Whitwood",
                "address_line_4": "Castleford",
                "postcode": "WF10 5QU",
                "country_code": "UK"
              },
              "delivery_note": "Handle with care as it has sharp edges.",
              "sales_invoices": []
            }
          ]
        }
      },
      "salesInvoiceInOrder": {
        "type": "object",
        "properties": {
          "sales_invoice_code": {
            "type": "integer",
            "example": 1
          },
          "customer_code": {
            "type": "string",
            "example": "UKC01"
          },
          "invoice_date": {
            "pattern": "YYYY-MM-DD",
            "type": "string",
            "format": "date"
          },
          "paid": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "salesInvoice": {
        "type": "object",
        "properties": {
          "sales_invoice_code": {
            "type": "integer",
            "example": 1
          },
          "sales_order_code": {
            "type": "integer",
            "example": 101
          },
          "customer_code": {
            "type": "string",
            "example": "UKC01"
          },
          "customer_ref": {
            "type": "string",
            "example": "PO 1234"
          },
          "vat_type": {
            "$ref": "#/components/schemas/vatType"
          },
          "line_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/salesInvoiceLineItems"
            }
          },
          "currency": {
            "type": "string",
            "example": "GBP"
          },
          "net_amount": {
            "type": "number",
            "format": "float",
            "example": 200
          },
          "vat_amount": {
            "type": "number",
            "format": "float",
            "example": 40
          },
          "total": {
            "type": "number",
            "format": "float",
            "example": 240
          },
          "delivery_address": {
            "$ref": "#/components/schemas/salesOrder_delivery_address"
          },
          "delivery_note": {
            "type": "string",
            "example": "Handle with care as it has sharp edges."
          },
          "invoice_date": {
            "pattern": "YYYY-MM-DD",
            "type": "string",
            "format": "date"
          },
          "paid": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "allSalesInvoices": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/salesInvoice"
            }
          }
        },
        "example": {
          "items": [
            {
              "sales_invoice_code": 1,
              "sales_order_code": 101,
              "customer_code": "UKSC01",
              "customer_ref": "PO 12345",
              "vat_type": {
                "vat_type_id": 1,
                "name": "UK Standard"
              },
              "line_items": [
                {
                  "product_code": "2mmSS",
                  "description": "Stainless Steel",
                  "location_code": 1,
                  "quantity": 2,
                  "list_price": 100,
                  "unit_price": 50,
                  "vat_value": 10
                },
                {
                  "product_code": "Oil",
                  "description": "Castor Oil",
                  "location_code": 1,
                  "quantity": 20,
                  "list_price": 500,
                  "unit_price": 500,
                  "vat_value": 1000
                }
              ],
              "currency": "GBP",
              "net_amount": 10100,
              "vat_amount": 1010,
              "total": 11110,
              "delivery_address": {
                "contact_name": "Chris Evans",
                "address_line_1": "Pioneer Court",
                "address_line_2": "Pioneer Way",
                "address_line_3": "Whitwood",
                "address_line_4": "Castleford",
                "postcode": "WF10 5QU",
                "country_code": "UK"
              },
              "delivery_note": "Handle with care as it has sharp edges.",
              "invoice_date": "2018-03-20",
              "paid": true
            },
            {
              "sales_invoice_code": 2,
              "sales_order_code": 101,
              "customer_code": "UKC0101",
              "vat_type": {
                "vat_type_id": 1,
                "name": "UK Standard"
              },
              "line_items": [
                {
                  "product_code": "Pan",
                  "description": "Frying Pan",
                  "location_code": 1,
                  "quantity": 2,
                  "list_price": 100,
                  "unit_price": 100,
                  "vat_value": 40
                }
              ],
              "currency": "GBP",
              "net_amount": 200,
              "vat_amount": 40,
              "total": 240,
              "delivery_address": {
                "contact_name": "Chris Evans",
                "address_line_1": "Pioneer Court",
                "address_line_2": "Pioneer Way",
                "address_line_3": "Whitwood",
                "address_line_4": "Castleford",
                "postcode": "WF10 5QU",
                "country_code": "UK"
              },
              "delivery_note": "Handle with care as it has sharp edges.",
              "invoice_date": "2019-11-15",
              "paid": false
            },
            {
              "sales_invoice_code": 3,
              "sales_order_code": 101,
              "customer_code": "UKC01",
              "vat_type": {
                "vat_type_id": 1,
                "name": "UK Standard"
              },
              "line_items": [
                {
                  "product_code": "2mmSS",
                  "description": "Stainless Steel",
                  "location_code": 1,
                  "quantity": 5,
                  "list_price": 120,
                  "unit_price": 120,
                  "vat_value": 120
                }
              ],
              "currency": "GBP",
              "net_amount": 600,
              "vat_amount": 120,
              "total": 720,
              "delivery_address": {
                "contact_name": "Chris Evans",
                "address_line_1": "Pioneer Court",
                "address_line_2": "Pioneer Way",
                "address_line_3": "Whitwood",
                "address_line_4": "Castleford",
                "postcode": "WF10 5QU",
                "country_code": "UK"
              },
              "delivery_note": "Handle with care as it has sharp edges.",
              "invoice_date": "2019-11-15",
              "paid": true
            }
          ]
        }
      },
      "receipt": {
        "type": "object",
        "properties": {
          "receipt_code": {
            "type": "integer",
            "example": 1
          },
          "customer_code": {
            "type": "string",
            "example": "UKC01"
          },
          "bank_account_code": {
            "type": "string",
            "example": "BANK1"
          },
          "amount": {
            "multipleOf": 0.01,
            "type": "number",
            "example": 120
          },
          "currency": {
            "type": "string",
            "example": "GBP"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "reference": {
            "type": "string",
            "example": "SO 123"
          }
        },
        "description": "Receipt details"
      },
      "receiptForm": {
        "required": [
          "amount",
          "bank_account_code",
          "date",
          "sales_invoice_code"
        ],
        "type": "object",
        "properties": {
          "customer_code": {
            "type": "string",
            "example": "UKC01"
          },
          "bank_account_code": {
            "type": "string",
            "example": "BANK1"
          },
          "amount": {
            "multipleOf": 0.01,
            "type": "number",
            "example": 120
          },
          "currency": {
            "type": "string",
            "example": "GBP"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "reference": {
            "type": "string",
            "example": "SO 123"
          },
          "outstanding": {
            "type": "array",
            "example": [
              {
                "document_type": "sales_invoice",
                "document_code": 101
              }
            ],
            "items": {
              "$ref": "#/components/schemas/document"
            }
          }
        }
      },
      "document": {
        "type": "object",
        "properties": {
          "document_type": {
            "type": "string"
          },
          "document_code": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "allReceipts": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/receipt"
            }
          }
        },
        "example": {
          "items": [
            {
              "receipt_code": 1,
              "customer_code": "UKC0102",
              "bank_account_code": "BANK2",
              "amount": 1500,
              "currency": "GBP",
              "date": "2019-02-02",
              "reference": "SO 212"
            },
            {
              "receipt_code": 2,
              "customer_code": "UKC01",
              "bank_account_code": "BANK1",
              "amount": 500,
              "currency": "INR",
              "date": "2019-02-02",
              "reference": "SO 412"
            },
            {
              "receipt_code": 3,
              "customer_code": "UKC01",
              "bank_account_code": "BANK1",
              "amount": 120,
              "currency": "GBP",
              "date": "2019-11-15",
              "reference": "SO 123"
            }
          ]
        }
      },
      "bankAccount": {
        "type": "object",
        "properties": {
          "bank_account_code": {
            "type": "string",
            "example": "BANK1"
          },
          "name": {
            "type": "string",
            "example": "Bank Current Account"
          }
        }
      },
      "allBankAccounts": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/bankAccount"
            }
          }
        },
        "example": {
          "items": [
            {
              "bank_account_code": "BANK1",
              "name": "Bank Current Account"
            },
            {
              "bank_account_code": "BANK2",
              "name": "Bank Deposit Account"
            }
          ]
        }
      },
      "address": {
        "required": [
          "address_line_1",
          "postcode"
        ],
        "type": "object",
        "properties": {
          "address_line_1": {
            "type": "string",
            "example": "Ditton Park"
          },
          "address_line_2": {
            "type": "string",
            "example": "Riding Court Road"
          },
          "address_line_3": {
            "type": "string",
            "example": "Datchet, Slough"
          },
          "address_line_4": {
            "type": "string",
            "example": "Berkshire"
          },
          "postcode": {
            "type": "string",
            "example": "SL3 9LL"
          },
          "country_code": {
            "type": "string",
            "example": "UK"
          }
        }
      },
      "deliveryAddressForm": {
        "required": [
          "address_line_1",
          "postcode"
        ],
        "type": "object",
        "properties": {
          "contact_name": {
            "type": "string",
            "example": "Chris Evans"
          },
          "address_line_1": {
            "type": "string",
            "example": "Pioneer Court"
          },
          "address_line_2": {
            "type": "string",
            "example": "Pioneer Way"
          },
          "address_line_3": {
            "type": "string",
            "example": "Whitwood"
          },
          "address_line_4": {
            "type": "string",
            "example": "Castleford"
          },
          "postcode": {
            "type": "string",
            "example": "WF10 5QU"
          },
          "country_code": {
            "type": "string",
            "example": "UK"
          }
        }
      },
      "deliveryAddress": {
        "type": "object",
        "properties": {
          "delivery_address_code": {
            "type": "integer",
            "example": 1
          },
          "contact_name": {
            "type": "string",
            "example": "Chris Evans"
          },
          "address_line_1": {
            "type": "string",
            "example": "Pioneer Court"
          },
          "address_line_2": {
            "type": "string",
            "example": "Pioneer Way"
          },
          "address_line_3": {
            "type": "string",
            "example": "Whitwood"
          },
          "address_line_4": {
            "type": "string",
            "example": "Castleford"
          },
          "postcode": {
            "type": "string",
            "example": "WF10 5QU"
          },
          "country_code": {
            "type": "string",
            "example": "UK"
          }
        }
      },
      "contact": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Jane Doe"
          },
          "telephone": {
            "type": "string",
            "example": "0845 160 6162"
          },
          "fax": {
            "type": "string",
            "example": "0330 404 0806"
          },
          "web_address": {
            "type": "string",
            "example": "https://www.oneadvanced.com/"
          }
        }
      },
      "location": {
        "type": "object",
        "properties": {
          "location_code": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Warehouse"
          },
          "address": {
            "$ref": "#/components/schemas/address"
          }
        }
      },
      "allLocations": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/location"
            }
          }
        },
        "example": {
          "items": [
            {
              "location_code": 1,
              "name": "Warehouse",
              "address": {
                "address_line_1": "Ditton Park",
                "address_line_2": "Riding Court Road",
                "address_line_3": "Datchet, Slough",
                "address_line_4": "Berkshire",
                "postcode": "SL3 9LL",
                "country_code": "UK"
              }
            }
          ]
        }
      },
      "account": {
        "type": "object",
        "properties": {
          "account_code": {
            "type": "string",
            "example": "DEFSAL"
          },
          "name": {
            "type": "string",
            "example": "Default Sales Account"
          },
          "description": {
            "type": "string",
            "example": "Revenue Account"
          },
          "account_type": {
            "type": "string",
            "example": "Revenue"
          },
          "value": {
            "type": "number",
            "format": "float",
            "example": 400
          },
          "is_active": {
            "type": "boolean",
            "example": true
          },
          "is_budget_account": {
            "type": "boolean",
            "example": true
          },
          "parent_account_code": {
            "type": "string",
            "example": "PNLREV"
          }
        }
      },
      "allAccounts": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/account"
            }
          }
        },
        "example": {
          "items": [
            {
              "account_code": "DEFSAL",
              "name": "Default Sales Account",
              "account_type": "Revenue",
              "description": "Revenue Account",
              "value": 400,
              "is_active": true,
              "is_budget_account": true,
              "parent_account_code": "PNLREV"
            },
            {
              "account_code": "IMPORTAX",
              "name": "Import Duties & Taxes",
              "account_type": "Expense",
              "description": "Expense Account",
              "value": 200,
              "is_active": true,
              "is_budget_account": true,
              "parent_account_code": "PNLDIR"
            },
            {
              "account_code": "CASSTK",
              "name": "CAS Stock",
              "account_type": "BalanceSheet",
              "description": "BalanceSheet Account",
              "value": 560,
              "is_active": true,
              "is_budget_account": true,
              "parent_account_code": "CAS"
            },
            {
              "account_code": "PNLREV",
              "name": "Sales Revenue",
              "account_type": "Summary",
              "description": "Parent of Default Revenue Account",
              "value": 240,
              "is_active": true,
              "is_budget_account": false,
              "parent_account_code": "PNL"
            },
            {
              "account_code": "PNL",
              "name": "Current Year Profit and Loss",
              "account_type": "Summary",
              "description": "Parent of Sales Revenue",
              "value": 440,
              "is_active": true,
              "is_budget_account": false,
              "parent_account_code": "ROOT"
            },
            {
              "account_code": "INTRECV",
              "name": "Interest Received",
              "account_type": "Revenue",
              "description": "Revenue Account",
              "value": 40.01,
              "is_active": false,
              "is_budget_account": false,
              "parent_account_code": "PNLREV"
            },
            {
              "account_code": "CISCON",
              "name": "CIS Sub Contractors",
              "account_type": "Expense",
              "description": "Expense Account",
              "value": 50,
              "is_active": false,
              "is_budget_account": false,
              "parent_account_code": "SUBCON"
            },
            {
              "account_code": "BANK1",
              "name": "Bank Current Account",
              "account_type": "CurrentAccount",
              "description": "Current Account",
              "value": 40.01,
              "is_active": true,
              "is_budget_account": false,
              "parent_account_code": "CORPTAX"
            },
            {
              "account_code": "PENSCON",
              "name": "Pensions Control",
              "account_type": "Payroll",
              "description": "Payroll Account",
              "value": 450,
              "is_active": true,
              "is_budget_account": false,
              "parent_account_code": "CLIACC"
            }
          ],
          "self": "https://virtserver.swaggerhub.com/advanced5/bce/v1/accounts?page=1",
          "first": "https://virtserver.swaggerhub.com/advanced5/bce/v1/accounts?page=1",
          "next": "https://virtserver.swaggerhub.com/advanced5/bce/v1/accounts?page=2",
          "last": "https://virtserver.swaggerhub.com/advanced5/bce/v1/accounts?page=10",
          "page_size": 20
        }
      },
      "actual": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "float",
            "example": 450
          }
        }
      },
      "accountPutForm": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Default Sales Revenue Account"
          },
          "description": {
            "type": "string",
            "example": "Revenue Account Default Sales Revenue Account"
          },
          "is_budget_account": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "budgetModel": {
        "type": "object",
        "properties": {
          "budget_code": {
            "type": "string",
            "example": "BUD01"
          },
          "name": {
            "type": "string",
            "example": "Budget 2020-21"
          },
          "financial_year": {
            "type": "string",
            "example": "2020"
          },
          "description": {
            "type": "string",
            "example": "Budget 2020-21"
          },
          "is_live": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "allBudgetModels": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/budgetModel"
            }
          }
        },
        "example": {
          "items": [
            {
              "budget_code": "BUD01",
              "name": "Budget 2020-21",
              "financial_year": 2020,
              "description": "Budget 2020-21",
              "is_live": true
            },
            {
              "budget_code": "BUD02",
              "name": "Second Budget model 2020-21",
              "financial_year": 2020,
              "description": "Second Budget model 2020-21",
              "is_live": false
            },
            {
              "budget_code": "BUD03",
              "name": "Budget 2019-20",
              "financial_year": 2019,
              "description": "Budget 2019-20",
              "is_live": true
            },
            {
              "budget_code": "BUD04",
              "name": "Second Budget model 2019-20",
              "financial_year": 2019,
              "description": "Second Budget model 2019-20",
              "is_live": false
            }
          ],
          "self": "https://virtserver.swaggerhub.com/advanced5/bce/v1/budget-models?page=1",
          "first": "https://virtserver.swaggerhub.com/advanced5/bce/v1/budget-models?page=1",
          "next": "https://virtserver.swaggerhub.com/advanced5/bce/v1/budget-models?page=2",
          "last": "https://virtserver.swaggerhub.com/advanced5/bce/v1/budget-models?page=10",
          "page_size": 20
        }
      },
      "budgetAccount": {
        "type": "object",
        "properties": {
          "account_code": {
            "type": "string",
            "example": "DEFSAL"
          },
          "name": {
            "type": "string",
            "example": "Default Sales Account"
          },
          "account_type": {
            "type": "string",
            "example": "Revenue"
          },
          "value": {
            "type": "number",
            "format": "float",
            "example": 400
          }
        },
        "description": "Budget Account"
      },
      "allBudgetAccounts": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/budgetAccount"
            }
          }
        },
        "description": "Budget Accounts",
        "example": {
          "items": [
            {
              "account_code": "DEFSAL",
              "name": "Default Sales Account"
            },
            {
              "account_code": "IMPORTAX",
              "name": "Import Duties & Taxes"
            },
            {
              "account_code": "CASSTK",
              "name": "CAS Stock"
            },
            {
              "account_code": "EXPORTEXP",
              "name": "Export Expense"
            }
          ],
          "self": "https://virtserver.swaggerhub.com/advanced5/bce/v1/budget-models/BUD01/accounts?page=1",
          "first": "https://virtserver.swaggerhub.com/advanced5/bce/v1/budget-models/BUD01/accounts?page=1",
          "next": "https://virtserver.swaggerhub.com/advanced5/bce/v1/budget-models/BUD01/accounts?page=2",
          "last": "https://virtserver.swaggerhub.com/advanced5/bce/v1/budget-models/BUD01/accounts?page=10",
          "page_size": 20
        }
      },
      "budgetPeriod": {
        "type": "object",
        "properties": {
          "period": {
            "type": "string",
            "example": "12"
          },
          "budget_value": {
            "type": "number",
            "format": "float",
            "example": 300.9
          },
          "actual_value": {
            "type": "number",
            "format": "float",
            "example": 200
          }
        },
        "description": "Budget Period with budget value"
      },
      "allBudgetPeriods": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/budgetPeriod"
            }
          }
        },
        "description": "Budget Accounts",
        "example": {
          "items": [
            {
              "period": "12",
              "budget_value": 300.9,
              "actual_value": 320.9
            },
            {
              "period": "11",
              "budget_value": 100.94,
              "actual_value": 120.9
            },
            {
              "period": "10",
              "budget_value": 140.9,
              "actual_value": 120.9
            },
            {
              "period": "9",
              "budget_value": 333.3,
              "actual_value": 320.9
            },
            {
              "period": "8",
              "budget_value": 350.9,
              "actual_value": 320.9
            },
            {
              "period": "7",
              "budget_value": 230.9,
              "actual_value": 120.9
            },
            {
              "period": "6",
              "budget_value": 239,
              "actual_value": 220.9
            },
            {
              "period": "5",
              "budget_value": 220.55,
              "actual_value": 120.9
            },
            {
              "period": "4",
              "budget_value": 200.94,
              "actual_value": 120.9
            },
            {
              "period": "3",
              "budget_value": 300.9,
              "actual_value": 320.9
            },
            {
              "period": "2",
              "budget_value": 200.3,
              "actual_value": 139.8
            },
            {
              "period": "1",
              "budget_value": 245.45,
              "actual_value": 320.9
            }
          ],
          "self": "https://virtserver.swaggerhub.com/advanced5/bce/v1/budget-models/1/accounts/DEFSAL?page=1",
          "first": "https://virtserver.swaggerhub.com/advanced5/bce/v1/budget-models/1/accounts/DEFSAL?page=1",
          "next": "https://virtserver.swaggerhub.com/advanced5/bce/v1/budget-models/1/accounts/DEFSAL?page=2",
          "last": "https://virtserver.swaggerhub.com/advanced5/bce/v1/budget-models/1/accounts/DEFSAL?page=10",
          "page_size": 20
        }
      },
      "budgetModelPutForm": {
        "required": [
          "budget_code",
          "name"
        ],
        "type": "object",
        "properties": {
          "budget_code": {
            "type": "string",
            "example": "BUD001"
          },
          "name": {
            "type": "string",
            "example": "Budget model 2020-21"
          },
          "description": {
            "type": "string",
            "example": "Live Budget model 2020-21"
          },
          "is_live": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "budgetPeriodPutForm": {
        "type": "object",
        "properties": {
          "budget_value": {
            "type": "number",
            "format": "float",
            "example": 300.09
          }
        }
      },
      "problemDetails": {
        "required": [
          "title",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "format": "uri",
            "example": "http://oneadvanced.com/validation-error",
            "default": "about:blank"
          },
          "title": {
            "type": "string",
            "example": "Acoun Code is required"
          },
          "status": {
            "maximum": 600,
            "exclusiveMaximum": true,
            "minimum": 100,
            "type": "integer",
            "format": "int32",
            "example": 400
          },
          "invalid-params": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/invalidParameter"
            }
          }
        }
      },
      "invalidParameter": {
        "properties": {
          "field": {
            "type": "string"
          },
          "error": {
            "type": "string"
          }
        }
      },
      "versionDetails": {
        "properties": {
          "version": {
            "type": "string",
            "example": "1.8.0"
          }
        }
      },
      "ProblemDetailsModel": {
        "required": [
          "status",
          "title",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "A type URI",
            "format": "uri",
            "example": "https://oneadvanced.com/problem/400"
          },
          "title": {
            "type": "string",
            "description": "A short, human-readable summary of the problem type",
            "example": "Bad Request"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP status code for this occurrence of the problem",
            "format": "int32",
            "example": 400
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem",
            "example": "The request is invalid."
          },
          "issues": {
            "type": "array",
            "description": "A list of issues that exist with the request. Note this is an extension that is supported by the RFC but specific to Advanced.",
            "example": [
              {
                "fieldName": "fieldName",
                "erorr": "This is the problem with the field"
              },
              {
                "fieldName": "fieldOther",
                "error": "This is the problem with the field"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ProblemDetailsModel_issues"
            }
          },
          "instance": {
            "type": "string",
            "description": "A URI reference that identifies the specific occurrence of the problem.  It may or may not yield further information if dereferenced"
          }
        },
        "additionalProperties": false,
        "description": "Implementation of [RFC7807](https://tools.ietf.org/html/rfc7807) Problem Details object.  Content type should always be ```application/problem+json```.  Problem type definitions MAY extend the problem details object with additional members"
      },
      "inline_response_200": {
        "allOf": [
          {
            "$ref": "#/components/schemas/allProducts"
          },
          {
            "$ref": "#/components/schemas/pagination"
          }
        ]
      },
      "inline_response_200_1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/allCustomers"
          },
          {
            "$ref": "#/components/schemas/pagination"
          }
        ]
      },
      "inline_response_200_2": {
        "allOf": [
          {
            "$ref": "#/components/schemas/allSalesOrders"
          },
          {
            "$ref": "#/components/schemas/pagination"
          }
        ]
      },
      "inline_response_200_3": {
        "allOf": [
          {
            "$ref": "#/components/schemas/allSalesInvoices"
          },
          {
            "$ref": "#/components/schemas/pagination"
          }
        ]
      },
      "inline_response_200_4": {
        "allOf": [
          {
            "$ref": "#/components/schemas/allReceipts"
          },
          {
            "$ref": "#/components/schemas/pagination"
          }
        ]
      },
      "inline_response_200_5": {
        "allOf": [
          {
            "$ref": "#/components/schemas/allLocations"
          },
          {
            "$ref": "#/components/schemas/pagination"
          }
        ]
      },
      "inline_response_200_6": {
        "allOf": [
          {
            "$ref": "#/components/schemas/allBankAccounts"
          },
          {
            "$ref": "#/components/schemas/pagination"
          }
        ]
      },
      "inline_response_200_7": {
        "allOf": [
          {
            "$ref": "#/components/schemas/allExchangeRates"
          },
          {
            "$ref": "#/components/schemas/pagination"
          }
        ]
      },
      "inline_response_200_8": {
        "allOf": [
          {
            "$ref": "#/components/schemas/allAccounts"
          },
          {
            "$ref": "#/components/schemas/pagination"
          }
        ]
      },
      "inline_response_200_9": {
        "allOf": [
          {
            "$ref": "#/components/schemas/allBudgetModels"
          },
          {
            "$ref": "#/components/schemas/pagination"
          }
        ]
      },
      "inline_response_200_10": {
        "allOf": [
          {
            "$ref": "#/components/schemas/allBudgetAccounts"
          },
          {
            "$ref": "#/components/schemas/pagination"
          }
        ]
      },
      "inline_response_200_11": {
        "allOf": [
          {
            "$ref": "#/components/schemas/allBudgetPeriods"
          },
          {
            "$ref": "#/components/schemas/pagination"
          }
        ]
      },
      "salesOrder_delivery_address": {
        "type": "object",
        "properties": {
          "contact_name": {
            "type": "string",
            "example": "Peter Swan"
          },
          "address_line_1": {
            "type": "string",
            "example": "Ditton Park"
          },
          "address_line_2": {
            "type": "string",
            "example": "Riding Court Road"
          },
          "address_line_3": {
            "type": "string",
            "example": "Datchet, Slough"
          },
          "address_line_4": {
            "type": "string",
            "example": "Berkshire"
          },
          "postcode": {
            "type": "string",
            "example": "SL3 9LL"
          },
          "country_code": {
            "type": "string",
            "example": "UK"
          }
        }
      },
      "ProblemDetailsModel_issues": {
        "type": "object",
        "properties": {
          "fieldName": {
            "type": "string"
          },
          "error": {
            "type": "string"
          }
        }
      }
    },
    "responses": {
      "not_found": {
        "description": "The specified resource was not found"
      },
      "unauthorized": {
        "description": "Unauthorized"
      },
      "Problem400Response": {
        "description": "Bad Request",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/problemDetails"
            },
            "example": {
              "type": "http://oneadvanced.com/validation_error",
              "title": "Bad Request",
              "status": 400,
              "detail": "The request is invalid.",
              "invalid_params": [
                {
                  "field": "code",
                  "error": "Code is required."
                }
              ]
            }
          }
        }
      },
      "Problem404Response": {
        "description": "Not Found",
        "content": {
          "application/problem+json": {}
        }
      }
    },
    "requestBodies": {
      "auth": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/auth"
            }
          }
        }
      },
      "product": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/productForm"
            }
          }
        }
      },
      "customer": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/customerForm"
            }
          }
        }
      },
      "customerPut": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/customerPutForm"
            }
          }
        }
      },
      "deliveryAddress": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/deliveryAddressForm"
            }
          }
        }
      },
      "salesOrder": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/salesOrderForm"
            }
          }
        }
      },
      "salesInvoice": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/salesInvoiceForm"
            }
          }
        }
      },
      "receipt": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/receiptForm"
            }
          }
        }
      },
      "accountPut": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/accountPutForm"
            }
          }
        }
      },
      "budgetModelPut": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/budgetModelPutForm"
            }
          }
        }
      },
      "budgetPeriodPut": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/budgetPeriodPutForm"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}